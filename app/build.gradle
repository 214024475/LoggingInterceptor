apply plugin: 'com.android.application'

android {
    compileSdkVersion 27
    //noinspection GradleDependency
    buildToolsVersion '27.0.3'

    defaultConfig {
        applicationId "ihsanbal.com.logginginterceptor"
        minSdkVersion 14
        //noinspection OldTargetApi
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        buildConfigField("boolean", "MOCK", "false")
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile rootProject.file("${System.properties['user.home']}/.android/debug.keystore")
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        abortOnError false

        disable 'AllowBackup'
        disable 'GoogleAppIndexingWarning'
    }

    buildTypes {
        mock {
            debuggable true
            signingConfig signingConfigs.debug
            buildConfigField("boolean", "MOCK", "true")
        }
    }

}

dependencies {
    implementation 'com.android.support:appcompat-v7:' + rootProject.ext.supportVersion
    implementation 'io.reactivex:rxjava:' + rootProject.ext.rxjavaVersion
    implementation 'io.reactivex:rxandroid:' + rootProject.ext.rxAndroidVersion
    implementation 'com.squareup.retrofit2:retrofit:' + rootProject.ext.retrofitVersion
    implementation 'com.squareup.retrofit2:adapter-rxjava:' + rootProject.ext.retrofitRxAdapterVersion
    implementation 'com.google.dagger:dagger:' + rootProject.ext.daggerVersion
    implementation 'com.jakewharton:butterknife:' + rootProject.ext.butterKnifeVersion
    implementation 'com.squareup.retrofit2:converter-gson:' + rootProject.ext.gsonConverterVersion
    implementation 'com.squareup.okhttp3:okhttp:' + rootProject.ext.okhttpVersion
    implementation 'com.squareup.okio:okio:1.15.0'
    annotationProcessor 'com.google.dagger:dagger-compiler:' + rootProject.ext.daggerVersion
    annotationProcessor 'com.jakewharton:butterknife-compiler:' + rootProject.ext.butterKnifeVersion
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:' + rootProject.ext.leakCanaryVersion
    releaseApi 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.leakCanaryVersion
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:' + rootProject.ext.leakCanaryVersion
    compileOnly 'javax.annotation:jsr250-api:1.0'
//    implementation(project(':lib')) {
//        exclude group: 'org.json', module: 'json'
//    }
    implementation('com.github.ihsanbal:LoggingInterceptor:3.0.0') {
        exclude group: 'org.json', module: 'json'
    }
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test:rules:1.0.2'
}